; Start a new pool named 'elabpool'.
[elabpool]
access.log = /dev/stdout

; Unix user/group of processes
; Note: The user is mandatory. If the group is not set, the default user's group
;       will be used.
user = %ELABFTW_USER%
group = %ELABFTW_GROUP%

; The address on which to accept FastCGI requests.
; Valid syntaxes are:
;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on
;                            a specific port;
;   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on
;                            a specific port;
;   'port'                 - to listen on a TCP socket to all addresses
;                            (IPv6 and IPv4-mapped) on a specific port;
;   '/path/to/unix/socket' - to listen on a unix socket.
; Note: This value is mandatory.
listen = /run/php-fpm.sock

; Set permissions for unix socket, if one is used. In Linux, read/write
; permissions must be set in order to allow connections from a web server. Many
; BSD-derived systems allow connections regardless of permissions. The owner
; and group can be specified either by name or by their numeric IDs.
; Default Values: user and group are set as the running user
;                 mode is set to 0660
listen.owner = %ELABFTW_USER%
listen.group = %ELABFTW_GROUP%
;listen.mode = 0660

pm.status_path = /php-status
ping.path = /php-ping
ping.response = All systems nominal, Captain.

; Choose how the process manager will control the number of child processes.
; Possible Values:
;   static  - a fixed number (pm.max_children) of child processes;
;   dynamic - the number of child processes are set dynamically based on the
;             following directives. With this process management, there will be
;             always at least 1 children.
;             pm.max_children      - the maximum number of children that can
;                                    be alive at the same time.
;             pm.start_servers     - the number of children created on startup.
;             pm.min_spare_servers - the minimum number of children in 'idle'
;                                    state (waiting to process). If the number
;                                    of 'idle' processes is less than this
;                                    number then some children will be created.
;             pm.max_spare_servers - the maximum number of children in 'idle'
;                                    state (waiting to process). If the number
;                                    of 'idle' processes is greater than this
;                                    number then some children will be killed.
;  ondemand - no children are created at startup. Children will be forked when
;             new requests will connect. The following parameter are used:
;             pm.max_children           - the maximum number of children that
;                                         can be alive at the same time.
;             pm.process_idle_timeout   - The number of seconds after which
;                                         an idle process will be killed.
; Note: This value is mandatory.
pm = dynamic

; The number of child processes to be created when pm is set to 'static' and the
; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.
; This value sets the limit on the number of simultaneous requests that will be
; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.
; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP
; CGI. The below defaults are based on a server without much resources. Don't
; forget to tweak pm.* to fit your needs.
; Note: Used when pm is set to 'static', 'dynamic' or 'ondemand'
; Note: This value is mandatory.
pm.max_children = %PHP_MAX_CHILDREN%

; The number of child processes created on startup.
; Note: Used only when pm is set to 'dynamic'
; Default Value: (min_spare_servers + max_spare_servers) / 2
pm.start_servers = 5

; The desired minimum number of idle server processes.
; Note: Used only when pm is set to 'dynamic'
; Note: Mandatory when pm is set to 'dynamic'
pm.min_spare_servers = 4

; The desired maximum number of idle server processes.
; Note: Used only when pm is set to 'dynamic'
; Note: Mandatory when pm is set to 'dynamic'
pm.max_spare_servers = 6

; Redirect worker stdout and stderr into main error log. If not set, stdout and
; stderr will be redirected to /dev/null according to FastCGI specs.
; Note: on highloaded environment, this can cause some delay in the page
; process time (several ms).
; Default Value: no
catch_workers_output = yes

; Pass environment variables like LD_LIBRARY_PATH. All $VARIABLEs are taken from
; the current environment.
; Default Value: clean env
; This is for dev only, to try out external auth
;env[auth_user] = ntesla
;env[auth_username] = Nicolas
;env[auth_lastname] = Tesla
;env[auth_email] = "nico@example.com"
;env[auth_team] = "Alpha"

env[ELABIMG_VERSION] = %ELABIMG_VERSION_ENV%
; this is a random build id used to cache bust the assets with the ?v= query string
env[ELABIMG_BUILD_ID] = %ELABIMG_BUILD_ID%
; the variables below used to be in config.php but are now directly taken from PHP env
env[DB_HOST] = "%DB_HOST%"
env[DB_PORT] = "%DB_PORT%"
env[DB_NAME] = "%DB_NAME%"
env[DB_USER] = "%DB_USER%"
env[DB_PASSWORD] = "%DB_PASSWORD%"
env[DB_CERT_PATH] = "%DB_CERT_PATH%"
env[MAX_UPLOAD_SIZE] = "%MAX_UPLOAD_SIZE%"
env[MAX_UPLOAD_TIME] = "%MAX_UPLOAD_TIME%"
env[SECRET_KEY] = "%SECRET_KEY%"
env[SITE_URL] = "%SITE_URL%"
env[ELAB_AWS_ACCESS_KEY] = "%ELAB_AWS_ACCESS_KEY%"
env[ELAB_AWS_SECRET_KEY] = "%ELAB_AWS_SECRET_KEY%"
env[INVOKER_PSK] = "%INVOKER_PSK%"

php_admin_value[memory_limit] = %PHP_MAX_MEMORY%
php_admin_value[error_log] = /dev/stderr
